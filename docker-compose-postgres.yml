version: "3.7"

services:

  db_pg:
    image: postgres:14.3-alpine
    container_name: open_plan_pg
    restart: always
    env_file:
      - .envs/db.postgres
    expose:
      - 5432
    volumes:
      - db_data_pg:/var/lib/postgresql/data/
    networks:
      - open_plan_network_pg
  app_pg:
    build:
      context: ./app
      dockerfile: ./compose/production/app_postgres/Dockerfile
    container_name: django-open_plan_pg
    restart: always
    env_file:
      - .envs/epa.postgres
    expose:
      - 8000
    volumes:
      - static_volume_pg:/src/cdn_static_root
    command: "gunicorn --workers=2 --bind=0.0.0.0:8000 epa.wsgi:application"
    depends_on:
      - db_pg
    networks:
      - open_plan_network_pg
  djangoq_pg:
    build:
      context: ./app
      dockerfile: ./compose/production/app_postgres/Dockerfile
    container_name: django-q-open_plan_pg
    restart: always
    env_file:
      - .envs/epa.postgres
    command: python manage.py qcluster
    volumes:
      - .:/code
    expose:
      - 8000
    depends_on:
      - db_pg
      - app_pg
    networks:
      - open_plan_network_pg
  nginx_pg:
    image: nginx:1.21-alpine
    container_name: ngx_pg
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/postgres:/etc/nginx/conf.d
      - static_volume_pg:/static
    depends_on:
      - app_pg
    networks:
      - open_plan_network_pg

volumes:
  db_data_pg:
  static_volume_pg:

networks:
  open_plan_network_pg:
